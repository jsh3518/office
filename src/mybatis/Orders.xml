<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.office.mapper.OrdersMapper">
	<sql id="ordersColumns">ordersno,billingcycle,customerid,createtime,effecttime,sum,status,mpnid,reseller,createuser,payment,file,orderid</sql>
	<sql id="subscriptionColumns">ordersid,offerid,offername,quantity,billingcycle,subscriptionid,amount,createuser</sql>

	<resultMap type="Orders" id="ordersResultMap">
		<id column="id" property="id"/>
		<result column="ordersno" property="ordersNo"/>
		<result column="billingcycle" property="billingCycle"/>
		<result column="customerid" property="customerId"/>
		<result column="createtime" property="createTime"/>
		<result column="effecttime" property="effectTime"/>
		<result column="sum" property="sum"/>
		<result column="status" property="status"/>
		<result column="mpnid" property="mpnId"/>
		<result column="reseller" property="reseller"/>
		<result column="createuser" property="createUser"/>
		<result column="payment" property="payment"/>
		<result column="file" property="file"/>
		<result column="orderid" property="orderId"/>
		<association property="customer" column="customerid" javaType="Customer" 
			select="com.office.mapper.CustomerMapper.selectCustomerById">
		</association>
	</resultMap>
	
	<resultMap type="Subscription" id="subscriptionResultMap">
		<id column="id" property="id"/>
		<result column="ordersid" property="ordersId"/>
		<result column="offerid" property="offerId"/>
		<result column="offername" property="offerName"/>
		<result column="parent" property="parent"/>
		<result column="parentname" property="parentName"/>
		<result column="quantity" property="quantity"/>
		<result column="billingcycle" property="billingCycle"/>
		<result column="subscriptionid" property="subscriptionId"/>
		<result column="amount" property="amount"/>
		<result column="createuser" property="createUser"/>
	</resultMap>
	<select id="listPageOrders" resultMap="ordersResultMap">
		select o.id,<include refid="ordersColumns"/>
		from orders o
		where exists(select 1 from customer c where c.id = o.customerid
		<if test="createUser!=null and createUser!=''">
			and c.createuser = #{createUser}
		</if>
		<if test="companyName!=null and companyName!=''">
			and c.companyname like "%"#{companyName}"%"
		</if>
		<if test="domain!=null and domain!=0">
			and c.domain like "%"#{domain}"%"
		</if>
		)
		<if test="customerId!=null and customerId!=0">
			and o.customerid =#{customerId}
		</if>
		<if test="ordersNo!=null and ordersNo!=''">
			and o.ordersno like "%"#{ordersNo}"%"
		</if>
		<if test="status!=null and status!=''">
			and o.status = #{status}
		</if>
		<if test="id!=null and id!=''">
			and id = #{id}
		</if>
		order by CASE WHEN STATUS = 3 THEN	0 ELSE STATUS END,createtime
	</select>
	
	<select id="getOrdersById" resultMap="ordersResultMap">
		select o.id,<include refid="ordersColumns"/>
		from orders o
		where exists(select 1 from customer c where c.id = o.customerid)
			and o.id = #{id}
	</select>
	
	<select id="getMaxOrdersNo" parameterType="Date" resultType="String">
		select max(ordersno) from orders where to_days(createtime)=to_days(#{date})
	</select>
	
	<select id="getSubscription" resultMap="subscriptionResultMap">
		SELECT s.id,s.ordersid,s.offerid,s.offername,o.offerid parent,o.offername parentname,s.quantity,billingcycle,s.amount,s.createuser
		FROM subscription s
		LEFT JOIN offer c ON c.offerid = s.offerid
		LEFT JOIN offer o ON c.parent = o.offerid
		WHERE s.ordersid = #{ordersId}
	</select>
	
	<insert id="insertOrders" parameterType="Orders" useGeneratedKeys="true" keyProperty="id">
		insert orders (<include refid="ordersColumns"/>) values (#{ordersNo},#{billingCycle},#{customerId},#{createTime},#{effectTime},#{sum},#{status},#{mpnId},#{reseller},#{createUser},#{payment},#{file},#{orderId})
	</insert>
	
	<insert id="insertSubscription" parameterType="List" useGeneratedKeys="true" keyProperty="id">
		insert subscription (<include refid="subscriptionColumns"/>) values
		<foreach collection="list" item="subscription" index="index" open="(" close=")" separator="),(">
			#{subscription.ordersId}, #{subscription.offerId},(select o.offername from offer o where o.offerid=#{subscription.offerId}),#{subscription.quantity},#{subscription.billingCycle},#{subscription.subscriptionId},#{subscription.amount},#{subscription.createUser}
		</foreach>
	</insert>
	
	<update id="updateOrders" parameterType="Orders">
		update orders set status=#{status}
		<if test="payment!=null and payment!=''">
			,payment = #{payment}
		</if>
		<if test="mpnId!=null and mpnId!=''">
		 and mpnid=#{mpnId}
		</if>
		<if test="reseller!=null and reseller!=''">
		 and reseller=#{reseller}
		</if>
		<if test="file!=null and file!=''">
			,file=#{file}
		</if>
		<if test="orderId!=null and orderId!=''">
			,orderid=#{orderId}
		</if>
		where id=#{id}
	</update>
	
	<update id="updateSubscription" parameterType="Subscription">
		update subscription set subscriptionid=#{subscriptionId}
		<if test="amount!=null and amount!=''">
			,amount = #{amount}
		</if>
		where 1=1
		<if test="ordersId!=null and ordersId!=''">
			and ordersid=#{ordersId}
		</if>
		<if test="offerId!=null and offerId!=''">
		 and offerid=#{offerId}
		</if>
		<if test="id!=null and id!=''">
		  and id = #{id}
		</if>
	</update>
</mapper>